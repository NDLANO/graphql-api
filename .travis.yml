notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: UfrXQBxAC7PvxMll52rmCWxDkbXinH8B2FFpCzmrhFDAWbeFmDzMcS/0/92dnrsSoGq9zEQckfEeXW0LYfVaTNanmNg4WKi2Si3sC/FNVAwW3g2QEnV5AiYHiEfDxVzWOjeHMh7tl8yG7HG5PleexMnYIHz6v7KtpXmOxQew9ULbrIDVtpTGQxo//O+YzYUEh/HdxH44PT/lVIr/93iINoq6Tz3EsSzctqX6r02NU8qmOI99bHb2sZbBwHtbm5388uCoa207RUlGHG9yHSap/uH7fRoRA/3qCwnF2Xd8+cWGAl+yI80wjj9B5GkV7NyhWlQsV4kIiHNss/nvqDRl04Pmu0Y+u1AbOZU6XjzmxY8sOGg5cYgrwrvjabOVhswjmDN0OKxU54h/M5dnEUERU/sZri20edvOuFi8t4AJmy4kjawhXRjW7ZFV5pdCObRH9etIx3Dl1ZN8O7hI45lROuRIthTVmbfxceQfDl4k3fzBu0GadkhLuxY8dU37wznp6Q5Wsow5Xr9Ojt4tsZybwVAMzT3slMYEDuAp9Xr8celoUzUO2QWSHnDuA9mKmETKPjg2Gp/FHUh0+oUUe9r8ZHqd6DPi4txILmo8ozKfR7hqI6KSDOvjuyfjFPQx2uL/STFlR2adoIIe7ZvcuBO5W3PH3KdyeM7nYWfwgYyd1Ds=
matrix:
  fast_finish: true
  include:
    - name: "Test"
      language: node_js
      node_js: '10'
      before_install:
        - curl -o- -L https://yarnpkg.com/install.sh | bash
        - export PATH="$HOME/.yarn/bin:$PATH"
      script: yarn check-all
      before_script:
        - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin

    - name: "Release"
      language: python
      if: branch = master AND type = push
      python: 3.7
      dist: focal
      services:
        - docker
      cache: pip
      before_install:
        # Authenticate docker client to deploy aws registry
        - pip install awscli
        - $(aws ecr get-login --no-include-email --region eu-west-1)

        # Fetch deploy repo
        - git clone --depth 1 https://knowit-at-ndla:$TRAVIS_RELEASE_GITHUB_TOKEN@github.com/ndlano/deploy.git ../deploy

        # Setup env
        - export NDLA_HOME=$(realpath $(pwd)/../)
        - export NDLA_DEPLOY=$NDLA_HOME/deploy
        - export DEPLOY_VERSION=$(git -C $NDLA_DEPLOY rev-parse --short=7 HEAD)
        - export DEPLOY_DOCKER_REPO=784120951859.dkr.ecr.eu-west-1.amazonaws.com/ndla/deploy

        # Get cache, and don't fail if missing
        - docker pull $DEPLOY_DOCKER_REPO:$DEPLOY_VERSION || true
      install:
        - eval "$($NDLA_DEPLOY/scripts/bin/ndla init -)"
      env:
        - SSH_AUTH_SOCK=/tmp/mock_sock
      script:
        - ndla release graphql-api --update-chart
      before_cache: # Save docker image as cache
        - docker push $DEPLOY_DOCKER_REPO:$DEPLOY_VERSION
      before_script:
        - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin


  allow_failures:
      - name: "Release"
    
